import pefile
import sys
import os

def extract_strings(file_path):
    with open(file_path, 'rb') as f:
        data = f.read()
    
    # Extract printable strings
    strings = []
    current_string = []
    
    for byte in data:
        # If the byte is a printable character (i.e., between 32 and 126 in ASCII)
        if 32 <= byte <= 126:
            current_string.append(chr(byte))
        else:
            # If current_string is not empty, join it into a string and add it to the list
            if current_string:
                strings.append(''.join(current_string))
                current_string = []
    
    # If there's a leftover string at the end, add it
    if current_string:
        strings.append(''.join(current_string))
    
    return strings

def analyze_pe(file_path):
    try:
        pe = pefile.PE(file_path)
        print(f"File: {file_path}")
        print(f"Entry Point: {hex(pe.OPTIONAL_HEADER.AddressOfEntryPoint)}")
        print(f"Number of Sections: {len(pe.sections)}")
        
        for section in pe.sections:
            print(f"Section: {section.Name.decode().strip()}")
            print(f"  Virtual Size: {hex(section.Misc_VirtualSize)}")
            print(f"  Raw Size: {hex(section.SizeOfRawData)}")
    except pefile.PEFormatError as e:
        print(f"Error: The file '{file_path}' is not a valid PE file.")
        print(f"Details: {e}")

if __name__ == "__main__":
    print(f"Received Arguments: {sys.argv}")
    
    # Check if there are exactly 2 arguments (script + file path)
    if len(sys.argv) != 2:
        print(f"Error: Expected 2 arguments, but got {len(sys.argv)} arguments.")
        sys.exit(1)
    
    file_path = sys.argv[1]
    
    # Debugging: print the file path to ensure it's correct
    print(f"File Path: {file_path}")

    print("Extracting strings...")
    strings = extract_strings(file_path)
    print("Extracted Strings:")
    for s in strings:
        print(s)

    # Check if the file is a PE file before analyzing it
    if file_path.lower().endswith(('.exe', '.dll', '.sys')):
        print("\nAnalyzing PE file...")
        analyze_pe(file_path)
    else:
        print("\nSkipping PE analysis because the file is not a PE file.")